// Importar el contenido de cada área desde sus archivos dedicados
import { area1Content } from './area_1.js';
import { area2Content } from './area_2.js';
import { area3Content } from './area_3.js';
import { area4Content } from './area_4.js';
import { area5Content } from './area_5.js';
import { area6Content } from './area_6.js';


document.addEventListener('DOMContentLoaded', () => {

    // Diccionario de textos para la UI
    const uiText = {
        en: {
            main_title: "DOP-C02 Ultimate Study Guide",
            main_subtitle: "Select a knowledge area to begin your training.",
            back_to_menu: "Back to Menu"
        },
        es: {
            main_title: "Guía de Estudio Definitiva DOP-C02",
            main_subtitle: "Selecciona un área de conocimiento para iniciar tu entrenamiento.",
            back_to_menu: "Volver al Menú"
        }
    };

    // Combinar todos los datos importados en un solo objeto para la aplicación
    const studyData = {
        '1': area1Content,
        '2': area2Content,
        '3': area3Content,
        '4': area4Content,
        '5': area5Content,
        '6': area6Content,
    };

    // ========================================================================
    //  ELEMENTOS DEL DOM
    // ========================================================================
    const langOverlay = document.getElementById('language-selector-overlay');
    const appContainer = document.getElementById('app-container');
    const langEnButton = document.getElementById('lang-en');
    const langEsButton = document.getElementById('lang-es');
    const mainMenu = document.getElementById('main-menu');
    const topicGrid = document.getElementById('topic-grid');
    const studyView = document.getElementById('study-view');
    
    // Vistas Desktop
    const sidebar = document.getElementById('sidebar');
    const sidebarTitle = document.getElementById('sidebar-title');
    const sidebarNav = document.getElementById('sidebar-nav');
    const backToMenuBtn = document.getElementById('back-to-menu-btn');

    // Vistas Mobile
    const mobileTitle = document.getElementById('mobile-title');
    const hamburgerBtn = document.getElementById('hamburger-btn');
    const mobileSidebarOverlay = document.getElementById('mobile-sidebar-overlay');
    const mobileSidebar = document.getElementById('mobile-sidebar');
    const mobileSidebarTitle = document.getElementById('mobile-sidebar-title');
    const mobileSidebarNav = document.getElementById('mobile-sidebar-nav');
    const mobileBackToMenuBtn = document.getElementById('mobile-back-to-menu-btn');
    
    const studyContent = document.getElementById('study-content');

    // ========================================================================
    //  ESTADO DE LA APLICACIÓN
    // ========================================================================
    let currentLanguage;
    let currentTopicId;

    // ========================================================================
    //  LÓGICA DE IDIOMA Y TRADUCCIÓN
    // ========================================================================
    function setupAndStartApp(lang) {
        currentLanguage = lang;
        langOverlay.classList.add('hidden');
        appContainer.classList.remove('hidden');
        translateUI();
        init(); // Iniciar la lógica principal de la app
    }

    function translateUI() {
        document.querySelectorAll('[data-key]').forEach(el => {
            const key = el.dataset.key;
            if (uiText[currentLanguage][key]) {
                el.textContent = uiText[currentLanguage][key];
            }
        });
    }

    function parseBilingual(text) {
        if (!text || !text.includes(' / ')) return text;
        const parts = text.split(' / ');
        const content = currentLanguage === 'en' ? parts[0].trim() : parts[1].trim();
        
        // Renderizar el contenido bilingüe correctamente
        if (content.startsWith('<div')) {
             const parser = new DOMParser();
             const doc = parser.parseFromString(content, 'text/html');
             return doc.querySelector(`div[lang=${currentLanguage}]`).innerHTML;
        }
        return content;
    }

    // ========================================================================
    //  LÓGICA PRINCIPAL DE LA APLICACIÓN
    // ========================================================================
    function init() {
        renderMainMenu();
        backToMenuBtn.addEventListener('click', showMainMenu);
        mobileBackToMenuBtn.addEventListener('click', showMainMenu);
        hamburgerBtn.addEventListener('click', toggleMobileMenu);
        mobileSidebarOverlay.addEventListener('click', toggleMobileMenu);
    }

    function renderMainMenu() {
        topicGrid.innerHTML = '';
        Object.keys(studyData).forEach(id => {
            const topic = studyData[id];
            const card = document.createElement('div');
            card.className = 'topic-card cursor-pointer p-6 flex flex-col items-center text-center fade-in';
            card.style.animationDelay = `${id * 100}ms`;
            card.innerHTML = `
                <div class="icon-container p-4 rounded-full text-white mb-4">${topic.icon}</div>
                <h2 class="text-2xl font-bold">${parseBilingual(topic.title)}</h2>
            `;
            card.addEventListener('click', () => showStudyView(id));
            topicGrid.appendChild(card);
        });
    }

    function showStudyView(topicId) {
        currentTopicId = topicId;
        mainMenu.classList.add('fade-out');
        setTimeout(() => {
            mainMenu.classList.add('hidden');
            mainMenu.classList.remove('fade-out');
            
            studyView.classList.remove('hidden');
            studyView.classList.add('fade-in');
            renderStudySection(topicId, 0);
        }, 500);
    }

    function showMainMenu() {
        studyView.classList.add('fade-out');
        setTimeout(() => {
            studyView.classList.add('hidden');
            studyView.classList.remove('fade-out');

            mainMenu.classList.remove('hidden');
            mainMenu.classList.add('fade-in');
        }, 500);
    }

    function renderStudySection(topicId, sectionIndex) {
        const topic = studyData[topicId];
        const topicTitle = parseBilingual(topic.title);

        // Actualizar títulos
        sidebarTitle.textContent = topicTitle;
        mobileSidebarTitle.textContent = topicTitle;
        mobileTitle.textContent = topicTitle;

        // Limpiar navegaciones
        sidebarNav.innerHTML = '';
        mobileSidebarNav.innerHTML = '';

        topic.sections.forEach((section, index) => {
            const sectionTitle = parseBilingual(section.title);
            
            // Crear link para desktop
            const link = document.createElement('a');
            link.href = '#';
            link.textContent = sectionTitle;
            link.className = 'sub-topic-link block';
            if (index === sectionIndex) link.classList.add('active');
            link.addEventListener('click', (e) => {
                e.preventDefault();
                renderStudySection(topicId, index);
            });
            sidebarNav.appendChild(link);

            // Crear link para mobile
            const mobileLink = link.cloneNode(true);
            mobileLink.addEventListener('click', (e) => {
                e.preventDefault();
                renderStudySection(topicId, index);
                toggleMobileMenu(); // Cerrar menú al seleccionar
            });
            mobileSidebarNav.appendChild(mobileLink);
        });

        studyContent.innerHTML = parseBilingual(topic.sections[sectionIndex].content);
        document.querySelector('#main-content').scrollTop = 0;
    }
    
    function toggleMobileMenu() {
        mobileSidebarOverlay.classList.toggle('hidden');
        mobileSidebar.classList.toggle('-translate-x-full');
    }

    // --- INICIO DE LA APLICACIÓN ---
    langEnButton.addEventListener('click', () => setupAndStartApp('en'));
    langEsButton.addEventListener('click', () => setupAndStartApp('es'));
});

